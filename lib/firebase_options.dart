// File generated by FlutterFire CLI.
// ignore_for_file: type=lint, unused_import, unnecessary_import
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'firebase_options.dart';
import 'package:firebase_core/firebase_core.dart';

/// Function helper untuk menginisialisasi Firebase
/// 
/// Function ini menyederhanakan proses inisialisasi Firebase
/// dengan secara otomatis memilih konfigurasi platform yang sesuai
/// 
/// Returns [Future<void>] yang menunggu hingga Firebase terinisialisasi
Future<void> initializeFirebase() async {
  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);
}

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```

/// Kelas yang berisi konfigurasi Firebase untuk berbagai platform
/// 
/// Kelas ini menyediakan konfigurasi Firebase yang berbeda untuk setiap platform
/// (Web, Android, Windows) dan secara otomatis memilih konfigurasi yang sesuai
/// berdasarkan platform yang sedang berjalan
class DefaultFirebaseOptions {
  /// Getter yang mengembalikan konfigurasi Firebase sesuai platform saat ini
  /// 
  /// Method ini secara otomatis mendeteksi platform yang sedang berjalan:
  /// - Web: menggunakan konfigurasi web
  /// - Android: menggunakan konfigurasi android  
  /// - Windows: menggunakan konfigurasi windows
  /// - iOS, macOS, Linux: belum dikonfigurasi (akan throw error)
  /// 
  /// Returns [FirebaseOptions] konfigurasi yang sesuai dengan platform
  /// Throws [UnsupportedError] jika platform belum dikonfigurasi
  static FirebaseOptions get currentPlatform {
    // Cek apakah berjalan di web browser
    if (kIsWeb) {
      return web;
    }
    
    // Switch berdasarkan platform target
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  /// Konfigurasi Firebase untuk platform Web
  /// 
  /// Berisi kredensial dan pengaturan khusus untuk aplikasi web:
  /// - API Key untuk autentikasi web
  /// - App ID unik untuk aplikasi web
  /// - Project ID yang sama untuk semua platform
  /// - Auth domain untuk autentikasi
  /// - Storage bucket untuk penyimpanan file
  /// - Measurement ID untuk Google Analytics
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyBH69otI7Rhh6VfAVaZYrOw_tAWOVMX8MY',
    appId: '1:485397222127:web:ab21c6baf4e18a6bb6811a',
    messagingSenderId: '485397222127',
    projectId: 'my-app-skin-disease-diagnose',
    authDomain: 'my-app-skin-disease-diagnose.firebaseapp.com',
    storageBucket: 'my-app-skin-disease-diagnose.firebasestorage.app',
    measurementId: 'G-6TKFPKGFRF',
  );

  /// Konfigurasi Firebase untuk platform Android
  /// 
  /// Berisi kredensial dan pengaturan khusus untuk aplikasi Android:
  /// - API Key yang berbeda dari web untuk keamanan
  /// - App ID unik untuk aplikasi Android
  /// - Menggunakan project dan storage yang sama
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyCVCmv2j_TKDp4mJ1PANFko87v1xlRNaG0',
    appId: '1:485397222127:android:9ac49708a8d53f62b6811a',
    messagingSenderId: '485397222127',
    projectId: 'my-app-skin-disease-diagnose',
    storageBucket: 'my-app-skin-disease-diagnose.firebasestorage.app',
  );

  /// Konfigurasi Firebase untuk platform Windows
  /// 
  /// Berisi kredensial dan pengaturan khusus untuk aplikasi Windows desktop:
  /// - Menggunakan API Key yang sama dengan web
  /// - App ID unik untuk aplikasi Windows
  /// - Measurement ID untuk analytics desktop
  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyBH69otI7Rhh6VfAVaZYrOw_tAWOVMX8MY',
    appId: '1:485397222127:web:d388904deb0e5624b6811a',
    messagingSenderId: '485397222127',
    projectId: 'my-app-skin-disease-diagnose',
    authDomain: 'my-app-skin-disease-diagnose.firebaseapp.com',
    storageBucket: 'my-app-skin-disease-diagnose.firebasestorage.app',
    measurementId: 'G-QYG75HW223',
  );
}
